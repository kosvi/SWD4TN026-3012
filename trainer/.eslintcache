[{"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/index.js":"1","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/drawerConfig.js":"2","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/App.js":"3","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/Drawer.js":"4","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/reportWebVitals.js":"5","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/Home.js":"6","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/About.js":"7","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/Errors.js":"8","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/Loading.js":"9","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/classes/Log.js":"10","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/AppSettings.js":"11","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/classes/DatabaseAccessApi.js":"12","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/databaseSettings.js":"13","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/Trainings.js":"14","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/AgGridSettings.js":"15","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/helpContent.js":"16","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/CustomerList.js":"17","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/PopMessages.js":"18","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/AddTraining.js":"19","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/formSettings.js":"20","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/Customer.js":"21","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/CustomerButton.js":"22","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/AddCustomer.js":"23"},{"size":500,"mtime":1607020819149,"results":"24","hashOfConfig":"25"},{"size":259,"mtime":1607516545045,"results":"26","hashOfConfig":"25"},{"size":2175,"mtime":1607624940310,"results":"27","hashOfConfig":"25"},{"size":5024,"mtime":1607624983086,"results":"28","hashOfConfig":"25"},{"size":362,"mtime":1607020819149,"results":"29","hashOfConfig":"25"},{"size":2066,"mtime":1607516347387,"results":"30","hashOfConfig":"25"},{"size":138,"mtime":1607104895253,"results":"31","hashOfConfig":"25"},{"size":256,"mtime":1607194830889,"results":"32","hashOfConfig":"25"},{"size":1096,"mtime":1607340212444,"results":"33","hashOfConfig":"25"},{"size":352,"mtime":1607252905976,"results":"34","hashOfConfig":"25"},{"size":445,"mtime":1607519677704,"results":"35","hashOfConfig":"25"},{"size":7136,"mtime":1607624170618,"results":"36","hashOfConfig":"25"},{"size":559,"mtime":1607515453922,"results":"37","hashOfConfig":"25"},{"size":7607,"mtime":1607622721938,"results":"38","hashOfConfig":"25"},{"size":296,"mtime":1607599689958,"results":"39","hashOfConfig":"25"},{"size":312,"mtime":1607598998093,"results":"40","hashOfConfig":"25"},{"size":7002,"mtime":1607599745122,"results":"41","hashOfConfig":"25"},{"size":906,"mtime":1607517670601,"results":"42","hashOfConfig":"25"},{"size":3017,"mtime":1607591113035,"results":"43","hashOfConfig":"25"},{"size":434,"mtime":1607537609833,"results":"44","hashOfConfig":"25"},{"size":283,"mtime":1607622509829,"results":"45","hashOfConfig":"25"},{"size":489,"mtime":1607597918905,"results":"46","hashOfConfig":"25"},{"size":3168,"mtime":1607624044989,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1insisl",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/index.js",[],["101","102"],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/drawerConfig.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/App.js",["103","104","105","106"],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/Drawer.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/reportWebVitals.js",[],["107","108"],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/Home.js",[],["109","110"],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/About.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/Errors.js",[],["111","112"],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/Loading.js",["113"],"import React, { useState, useEffect } from \"react\";\nimport Refresh from \"@material-ui/icons/Refresh\";\n\nexport default function Loading(props) {\n\n    const [msg, setMsg] = useState('');\n\n    useEffect(() => {\n        if (props.message) {\n            setMsg(props.message);\n        }\n    }, []);\n\n    return (\n        <div style={{\n            position: \"fixed\",\n            width: \"100vw\",\n            height: \"100vh\",\n            background: \"rgba(0, 0, 0, 0.5)\",\n            top: \"0\",\n            left: \"0\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n        }}>\n            <div style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                border: \"solid 0.3em black\",\n                borderRadius: \"1em\",\n                backgroundColor: \"white\",\n                color: \"black\",\n                padding: \"3em\",\n                minWidth: \"20vw\",\n                alignItems: \"center\",\n            }}>\n                <p>{msg}</p>\n                <Refresh />\n            </div>\n        </div>\n    )\n}","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/classes/Log.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/AppSettings.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/classes/DatabaseAccessApi.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/databaseSettings.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/Trainings.js",["114","115","116","117","118"],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/AgGridSettings.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/helpContent.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/CustomerList.js",["119","120","121","122","123"],"// REACT\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// AG-GRID\nimport { AgGridReact } from \"ag-grid-react\";\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport { AgGridSettings } from \"../config/AgGridSettings.js\";\n\n// MATERIAL-UI \nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\n// CUSTOM COMPONENTS\nimport { helpContents } from \"../config/helpContent.js\";\nimport { HelpButton } from \"../components/Drawer.js\";\nimport Loading from \"../components/Loading.js\";\nimport CustomerButton from \"../components/CustomerButton.js\";\n\n// APP LOGIC\nimport { DatabaseAccessApi, DatabaseObjectMethods } from \"../classes/DatabaseAccessApi.js\";\nimport { GridApi } from \"ag-grid-community\";\nimport { snackBarSettings, snackBarStyle } from \"../config/snackBarConfig.js\";\n\nexport default function CustomerList(props) {\n\n    const [loading, setLoading] = useState(true);\n    const [customers, setCustomers] = useState([]);\n\n    // Used to choose what content is shown in the grid\n    const [showAddress, setShowAddress] = useState(true);\n    const [showContact, setShowContact] = useState(true);\n\n    // Snackbar messages\n    const [snackOpen, setSnackOpen] = useState(false);\n    const [snackMessage, setSnackMessage] = useState(\"\");\n\n    // gridApi could be used for accessing grid data, we use it for CSV export\n    const [gridApi, setGridApi] = useState(null);\n    const gridRef = useRef();\n\n    useEffect(() => {\n        // on load we fetch customers to populate the grid\n        getCustomers();\n    }, []);\n\n    // this function is used for toggling grid content. \n    // (could be done prettier)\n    const toggleGridVisibility = (event) => {\n        if (event.target.name === \"address\") {\n            setShowAddress(!showAddress);\n        }\n        else if (event.target.name === \"contact\") {\n            setShowContact(!showContact);\n        }\n    }\n\n    const onGridReady = (params) => {\n        setGridApi(params.api);\n        gridRef.current = params.api;\n    }\n\n    const getCustomers = async () => {\n        setLoading(true);\n        const allCustomers = await DatabaseAccessApi.getCustomers();\n        // if allCustomers == null, get failed\n        if (allCustomers != null) {\n            setCustomers(allCustomers);\n        }\n        setLoading(false);\n    }\n\n    const deleteCustomer = async (customer) => {\n        const customerUrl = customer.links[0].href;\n        if (window.confirm(\"Are you sure you want to delete \" + customer.firstname + \" \" + customer.lastname + \"?\")) {\n            const status = await DatabaseAccessApi.deleteCustomerWithUrl(customerUrl);\n            if (status !== false) {\n                // halpaa ja likasta kuin dissais puhevikasta...\n                await getCustomers();\n                handleSnackOpen(\"Deleted\");\n            } else {\n                handleSnackOpen(\"Failed\");\n            }\n        }\n    }\n\n    // We will use this function to update user to Rest API\n    const cellValueChanged = async (event) => {\n        const status = await DatabaseAccessApi.updateCustomerByCustomer(event.data);\n        if (status !== false) {\n            handleSnackOpen(\"Save successfull\");\n        }\n    }\n\n    // for the snackbar\n    const handleClose = () => {\n        setSnackOpen(false);\n        setSnackMessage(\"\");\n    }\n\n    const handleSnackOpen = (message) => {\n        setSnackMessage(message);\n        setSnackOpen(true);\n    }\n\n    const columns = [\n        { headerName: \"Firstname\", field: \"firstname\" },\n        { headerName: \"Lastname\", field: \"lastname\" },\n        { headerName: \"Streetaddress\", field: \"streetaddress\", hide: !showAddress },\n        { headerName: \"City\", field: \"city\", hide: !showAddress },\n        { headerName: \"Postcode\", field: \"postcode\", flex: 1, hide: !showAddress },\n        { headerName: \"Email\", field: \"email\", hide: !showContact },\n        { headerName: \"Phone\", field: \"phone\", flex: 1, hide: !showContact },\n        { headerName: \"\", field: \"\", flex: 1, sortable: false, filter: false, cellRendererFramework: params => <CustomerButton id={DatabaseObjectMethods.Extract.customerIdFromCustomer(params.data)} /> },\n        { headerName: \"\", field: \"\", flex: 1, sotrable: false, filter: false, cellRendererFramework: params => <DeleteForeverIcon style={{ color: \"red\", cursor: \"pointer\" }} onClick={() => deleteCustomer(params.data)} /> },\n    ];\n\n    if (loading) {\n        return (\n            <Loading />\n        )\n    }\n\n    return (\n        <>\n            <HelpButton content={helpContents.customers} />\n            <div className=\"ag-theme-material\" style={{\n                textAlign: AgGridSettings.aboveDivAlign,\n                marginLeft: AgGridSettings.aboveDivMargin,\n            }}>\n                <label>\n                    <input type=\"checkbox\" name=\"address\" onChange={toggleGridVisibility} checked={showAddress} /> Address information\n            </label>\n            &nbsp;\n            <label>\n                    <input type=\"checkbox\" name=\"contact\" onChange={toggleGridVisibility} checked={showContact} /> Contact information\n            </label>\n            </div>\n            <div className=\"ag-theme-material\" style={{ height: AgGridSettings.height, width: AgGridSettings.width, margin: \"auto\" }}>\n                <AgGridReact\n                    defaultColDef={{\n                        flex: 2,\n                        minWidth: AgGridSettings.colMinWidth,\n                        sortable: true,\n                        filter: true,\n                        floatingFilter: true,\n                        editable: true,\n                    }}\n                    animateRows='true'\n                    ref={gridRef}\n                    rowSelection={AgGridSettings.rowSelection}\n                    onGridReady={onGridReady}\n                    columnDefs={columns}\n                    rowData={customers}\n                    pagination={AgGridSettings.pagination}\n                    paginationPageSize={AgGridSettings.paginationPageSize}\n                    paginationAutoPageSize={AgGridSettings.paginationAutoPageSize}\n                    onCellValueChanged={cellValueChanged}\n                >\n                </AgGridReact>\n            </div>\n            <Snackbar open={snackOpen} autoHideDuration={snackBarSettings.autoHideDuration} onClose={handleClose}>\n                <div style={snackBarStyle}>{snackMessage}</div>\n            </Snackbar>\n        </>\n    )\n}\n\n/*\nfunction CustomerButton(props) {\n\n    const [linkPath, setLinkPath] = useState('');\n\n    useEffect(() => {\n        setLinkPath(\"/customer/\" + props.id);\n    }, []);\n\n    return (\n        <div>\n            <Link to={linkPath} style={{ color: \"black\" }}>\n                <SearchIcon />\n            </Link>\n        </div>\n    )\n}\n*/\n","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/PopMessages.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/AddTraining.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/config/formSettings.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/pages/Customer.js",[],"/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/CustomerButton.js",["124"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nexport default function CustomerButton(props) {\n\n    const [linkPath, setLinkPath] = useState('');\n\n    useEffect(() => {\n        setLinkPath(\"/customer/\" + props.id);\n    }, []);\n\n    return (\n        <div>\n            <Link to={linkPath} style={{ color: \"black\" }}>\n                <SearchIcon />\n            </Link>\n        </div>\n    )\n}\n","/home/ldap/ville/Opiskelu/Frontend/Github/trainer/src/components/AddCustomer.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":4,"column":27,"nodeType":"131","messageId":"132","endLine":4,"endColumn":36},{"ruleId":"129","severity":1,"message":"133","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":19},{"ruleId":"129","severity":1,"message":"134","line":6,"column":50,"nodeType":"131","messageId":"132","endLine":6,"endColumn":61},{"ruleId":"129","severity":1,"message":"135","line":10,"column":10,"nodeType":"131","messageId":"132","endLine":10,"endColumn":22},{"ruleId":"125","replacedBy":"136"},{"ruleId":"127","replacedBy":"137"},{"ruleId":"125","replacedBy":"138"},{"ruleId":"127","replacedBy":"139"},{"ruleId":"125","replacedBy":"140"},{"ruleId":"127","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":12,"column":8,"nodeType":"144","endLine":12,"endColumn":10,"suggestions":"145"},{"ruleId":"129","severity":1,"message":"133","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":19},{"ruleId":"129","severity":1,"message":"146","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},{"ruleId":"129","severity":1,"message":"147","line":36,"column":24,"nodeType":"131","messageId":"132","endLine":36,"endColumn":37},{"ruleId":"129","severity":1,"message":"148","line":45,"column":12,"nodeType":"131","messageId":"132","endLine":45,"endColumn":19},{"ruleId":"142","severity":1,"message":"149","line":51,"column":8,"nodeType":"144","endLine":51,"endColumn":10,"suggestions":"150"},{"ruleId":"129","severity":1,"message":"146","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"151","line":12,"column":8,"nodeType":"131","messageId":"132","endLine":12,"endColumn":14},{"ruleId":"129","severity":1,"message":"152","line":13,"column":8,"nodeType":"131","messageId":"132","endLine":13,"endColumn":18},{"ruleId":"129","severity":1,"message":"153","line":25,"column":10,"nodeType":"131","messageId":"132","endLine":25,"endColumn":17},{"ruleId":"129","severity":1,"message":"148","line":42,"column":12,"nodeType":"131","messageId":"132","endLine":42,"endColumn":19},{"ruleId":"142","severity":1,"message":"154","line":12,"column":8,"nodeType":"144","endLine":12,"endColumn":10,"suggestions":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'useLocation' is defined but never used.","'drawerConfig' is defined but never used.",["156"],["157"],["156"],["157"],["156"],["157"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.message'. Either include it or remove the dependency array. If 'setMsg' needs the current value of 'props.message', you can also switch to useReducer instead of useState and read 'props.message' in the reducer.","ArrayExpression",["158"],"'Link' is defined but never used.","'setCustomerId' is assigned a value but never used.","'gridApi' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTrainings'. Either include it or remove the dependency array.",["159"],"'Button' is defined but never used.","'SearchIcon' is defined but never used.","'GridApi' is defined but never used.","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array. If 'setLinkPath' needs the current value of 'props.id', you can also switch to useReducer instead of useState and read 'props.id' in the reducer.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [props.message]",{"range":"167","text":"168"},"Update the dependencies array to be: [getTrainings]",{"range":"169","text":"170"},"Update the dependencies array to be: [props.id]",{"range":"171","text":"172"},[289,291],"[props.message]",[1804,1806],"[getTrainings]",[322,324],"[props.id]"]